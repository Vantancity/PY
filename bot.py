from aiogram import Bot, Dispatcher
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import random
from datetime import datetime

TOKEN = '8243151682:AAHcITfIJKMBtv4MV5cIZfLVrv4WdMyzS14'
bot = Bot(TOKEN)
dp = Dispatcher()

daily_tips = [
    "–ü–ª–∞–Ω–∏—Ä—É–π —Å–≤–æ–π –¥–µ–Ω—å –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã —É—Å–ø–µ–≤–∞—Ç—å –±–æ–ª—å—à–µ.",
    "–í—ã–¥–µ–ª—è–π –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–¥—ã—Ö–∞, —á—Ç–æ–±—ã –ø–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.",
    "–°—Ç–∞–≤—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –∏–∑–º–µ—Ä–∏–º—ã–µ —Ü–µ–ª–∏ –Ω–∞ –¥–µ–Ω—å.",
    "–ù–∞—á–∏–Ω–∞–π –¥–µ–Ω—å —Å —Å–∞–º–æ–π –≤–∞–∂–Ω–æ–π –∑–∞–¥–∞—á–∏.",
    "–ò—Å–ø–æ–ª—å–∑—É–π —Ç–∞–π–º–µ—Ä—ã, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–≤–ª–µ–∫–∞—Ç—å—Å—è.",
    "–ù–µ –±–æ–π—Å—è –¥–µ–ª–∞—Ç—å –æ—à–∏–±–∫–∏, –æ–Ω–∏ —á–∞—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è.",
    "–î–µ–ª–∞–π –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–µ—Ä–µ—Ä—ã–≤—ã –∫–∞–∂–¥—ã–µ 60 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã.",
    "–ü–∏—Ç–∞–π—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–≤–æ—é —ç–Ω–µ—Ä–≥–∏—é.",
    "–ó–∞–Ω–∏–º–∞–π—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏ —Ö–æ—Ç—è –±—ã 15 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å.",
    "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ –∏–∑–±–µ–≥–∞–π –Ω–µ–≥–∞—Ç–∏–≤–∞.",
    "–ß–∏—Ç–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∫–Ω–∏–≥–∏ –∏–ª–∏ —Å—Ç–∞—Ç—å–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.",
    "–í–µ–¥–∏ –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.",
    "–ò—Å–ø–æ–ª—å–∑—É–π —Å–ø–∏—Å–∫–∏ –∑–∞–¥–∞—á –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–µ–ª.",
    "–£—á–∏—Å—å —á–µ–º—É-—Ç–æ –Ω–æ–≤–æ–º—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, –¥–∞–∂–µ –Ω–µ–º–Ω–æ–≥–æ.",
    "–û–±—â–∞–π—Å—è —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –ª—é–¥—å–º–∏ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫—Ä—É–≥–æ–∑–æ—Ä–∞."
]

my_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="/start"), KeyboardButton(text="/premium")]],
    resize_keyboard=True
)

class User(StatesGroup):
    name = State()
    age = State()

@dp.message(Command("start"))
async def start(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer("–ù–∞–∂–∏–º–∞–π –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –∏ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ 10 –∫–∞–Ω–∞–ª–æ–≤-–ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤", reply_markup=my_keyboard)
        await message.answer("–ù–∞–∑–æ–≤–∏ —Å–≤–æ—ë –∏–º—è:")
        await state.set_state(User.name)
    else:
        await message.answer("–ó–∞–≤–µ—Ä—à–∏ –≤–≤–æ–¥ –∏–ª–∏ –Ω–∞–∂–º–∏ /cancel")

@dp.message(User.name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–ù–∞–∑–æ–≤–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:")
    await state.set_state(User.age)

@dp.message(User.age)
async def get_age(message: Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–í–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 13)")
        return
    await state.update_data(age=int(message.text))
    data = await state.get_data()
    await message.answer(f"–¢–µ–±—è –∑–æ–≤—É—Ç {data['name']}, —Ç–µ–±–µ {data['age']} –ª–µ—Ç!")
    await state.clear()

@dp.message(Command("premium"))
async def prem(message: Message):
    name = message.from_user.first_name
    if message.from_user.is_premium:
        await message.answer(f"üéâ {name}, —Ç—ã —Å Premium! –ö—Ä—É—Ç–æ!")
    else:
        await message.answer(f"üëã {name}, –ø–æ–ø—Ä–æ–±—É–π Premium ‚Äî –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ!")

@dp.message(Command("advice"))
async def advice(message: Message):
    today = datetime.now().date().toordinal()
    random.seed(today)
    tip = random.choice(daily_tips)
    random.seed()
    await message.answer(tip)

@dp.message(Command("flip"))
async def flip(message: Message):
    await message.answer("–û—Ä—ë–ª" if random.random() < 0.5 else "–†–µ—à–∫–∞")

@dp.message(Command("dice"))
async def dice(message: Message):
    await message.answer("–ë—Ä–æ—Å–∞—é –∫—É–±–∏–∫...")
    await message.answer_dice(emoji="üé≤")

@dp.message(Command("help"))
async def help_command(message: Message):
    await message.answer("/start - –ù–∞—á–∞–ª–æ\n/advice - –°–æ–≤–µ—Ç –¥–Ω—è\n/flip - –û—Ä—ë–ª/–†–µ—à–∫–∞\n/dice - –ö—É–±–∏–∫\n/premium - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Premium\n/time - –í—Ä–µ–º—è\n/cancel - –û—Ç–º–µ–Ω–∞")

@dp.message(Command("time"))
async def show_time(message: Message):
    current_time = datetime.now().strftime("%H:%M:%S")
    await message.answer(f"–í—Ä–µ–º—è: {current_time}")

@dp.message(Command("cancel"))
async def cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ. /start")

if __name__ == "__main__":
    dp.run_polling(bot)